<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.3.0">
  <Workflow xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:q1="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision" xmlns:q2="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns:q3="clr-namespace:Bonsai.IO;assembly=Bonsai.System" xmlns:q4="clr-namespace:Bonsai.Dsp;assembly=Bonsai.Dsp" xmlns="https://horizongir.org/bonsai">
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:ConvertColor">
          <q1:Conversion>Bgr2Hsv</q1:Conversion>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:HsvThreshold">
          <q1:Lower>
            <q1:Val0>30</q1:Val0>
            <q1:Val1>5</q1:Val1>
            <q1:Val2>100</q1:Val2>
            <q1:Val3>0</q1:Val3>
          </q1:Lower>
          <q1:Upper>
            <q1:Val0>70</q1:Val0>
            <q1:Val1>150</q1:Val1>
            <q1:Val2>255</q1:Val2>
            <q1:Val3>255</q1:Val3>
          </q1:Upper>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:HsvThreshold">
          <q1:Lower>
            <q1:Val0>135</q1:Val0>
            <q1:Val1>80</q1:Val1>
            <q1:Val2>60</q1:Val2>
            <q1:Val3>0</q1:Val3>
          </q1:Lower>
          <q1:Upper>
            <q1:Val0>200</q1:Val0>
            <q1:Val1>255</q1:Val1>
            <q1:Val2>255</q1:Val2>
            <q1:Val3>255</q1:Val3>
          </q1:Upper>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:FindContours">
          <q1:Mode>External</q1:Mode>
          <q1:Method>ChainApproxNone</q1:Method>
          <q1:Offset>
            <q1:X>0</q1:X>
            <q1:Y>0</q1:Y>
          </q1:Offset>
          <q1:MinArea>5</q1:MinArea>
          <q1:MaxArea>80</q1:MaxArea>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:BinaryRegionAnalysis" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:FindContours">
          <q1:Mode>External</q1:Mode>
          <q1:Method>ChainApproxNone</q1:Method>
          <q1:Offset>
            <q1:X>0</q1:X>
            <q1:Y>0</q1:Y>
          </q1:Offset>
          <q1:MinArea>3</q1:MinArea>
          <q1:MaxArea>120</q1:MaxArea>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:BinaryRegionAnalysis" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:LargestBinaryRegion" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:LargestBinaryRegion" />
      </Expression>
      <Expression xsi:type="q2:PythonTransform">
        <q2:Name>DrawCentroid</q2:Name>
        <q2:Description>A Python script used to overlay the tracking results on top of the camera image.</q2:Description>
        <q2:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import *

trajectory = None


@returns(IplImage)
def process(value):
  global trajectory
  red = value.Item1
  green = value.Item2
  image = value.Item3

  if trajectory is None:
    trajectory = IplImage(image.Size, image.Depth, 3)
    trajectory.SetZero()

  if red.Area &gt; 0:
    CV.Circle(trajectory, Point(red.Centroid), 4, Scalar.Rgb(0, 125, 125), -1)
  if green.Area &gt; 0:
    CV.Circle(trajectory, Point(green.Centroid), 4, Scalar.Rgb(125, 0, 125), -1)
  

  output = image.Clone()
  mask = IplImage(image.Size, image.Depth, 1)
  CV.CvtColor(trajectory,mask,ColorConversion.Bgr2Gray)
  CV.Threshold(mask,mask,0,255,ThresholdTypes.Binary)
  CV.Copy(trajectory,output,mask)
  if red.Area &gt; 0:
    CV.Circle(output, Point(red.Centroid), 4, Scalar.Rgb(0, 255, 255), -1)
  if green.Area &gt; 0:
    CV.Circle(output, Point(green.Centroid), 4, Scalar.Rgb(255, 0, 255), -1)  


  return output</q2:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Zip" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:CameraCapture">
          <q1:Index>0</q1:Index>
          <q1:CaptureProperties />
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:Centroid" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:Centroid" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Zip" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Timestamp" />
      </Expression>
      <Expression xsi:type="q3:CsvWriter">
        <q3:FileName>histogram_tes4942.csv</q3:FileName>
        <q3:Append>false</q3:Append>
        <q3:Overwrite>false</q3:Overwrite>
        <q3:Suffix>None</q3:Suffix>
        <q3:IncludeHeader>false</q3:IncludeHeader>
        <q3:Selector>Source.Item4.Timestamp,Source.Item1.X,Source.Item1.Y,Source.Item2.X,Source.Item2.Y,Source.Item3.Val0</q3:Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:Crop">
          <q1:RegionOfInterest>
            <q1:X>70</q1:X>
            <q1:Y>0</q1:Y>
            <q1:Width>462</q1:Width>
            <q1:Height>466</q1:Height>
          </q1:RegionOfInterest>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:Crop">
          <q1:RegionOfInterest>
            <q1:X>617</q1:X>
            <q1:Y>14</q1:Y>
            <q1:Width>9</q1:Width>
            <q1:Height>14</q1:Height>
          </q1:RegionOfInterest>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:Grayscale" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q4:Sum" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:VideoWriter">
          <q1:FileName>histogram_test8442.avi</q1:FileName>
          <q1:Suffix>None</q1:Suffix>
          <q1:Buffered>true</q1:Buffered>
          <q1:Overwrite>false</q1:Overwrite>
          <q1:FourCC>FMP4</q1:FourCC>
          <q1:FrameRate>30</q1:FrameRate>
          <q1:FrameSize>
            <q1:Width>0</q1:Width>
            <q1:Height>0</q1:Height>
          </q1:FrameSize>
          <q1:ResizeInterpolation>NearestNeighbor</q1:ResizeInterpolation>
        </Combinator>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Source.Centroid</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q4:Histogram2D">
          <q4:MinX>0</q4:MinX>
          <q4:MaxX>20</q4:MaxX>
          <q4:MinY>0</q4:MinY>
          <q4:MaxY>20</q4:MaxY>
          <q4:BinsX>20</q4:BinsX>
          <q4:BinsY>20</q4:BinsY>
          <q4:Normalize>false</q4:Normalize>
          <q4:Accumulate>true</q4:Accumulate>
        </Combinator>
      </Expression>
      <Expression xsi:type="Condition">
        <Name>ValidPoint</Name>
        <Description />
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="q2:ExpressionTransform">
              <q2:Expression>!single.IsNaN(X) &amp;&amp; !single.IsNaN(Y)</q2:Expression>
            </Expression>
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:Threshold">
          <q1:ThresholdValue>5</q1:ThresholdValue>
          <q1:MaxValue>255</q1:MaxValue>
          <q1:ThresholdType>Binary</q1:ThresholdType>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="DistinctUntilChanged" />
      </Expression>
      <Expression xsi:type="q2:PythonTransform">
        <q2:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import *

nbins = 20
binSizeX = 640 / nbins
binSizeY = 480 / nbins

@returns(Point2f)
def process(value):
  binX = int(value.X / binSizeX)
  binY = int(value.Y / binSizeY)
  return Point2f(binX, binY)</q2:Script>
      </Expression>
    </Nodes>
    <Edges>
      <Edge>
        <From>0</From>
        <To>1</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>0</From>
        <To>2</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>3</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>2</From>
        <To>5</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>3</From>
        <To>4</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>4</From>
        <To>7</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>6</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>6</From>
        <To>8</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>7</From>
        <To>10</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>7</From>
        <To>12</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>7</From>
        <To>22</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>8</From>
        <To>10</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>8</From>
        <To>13</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>10</From>
        <To>9</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>11</From>
        <To>21</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>12</From>
        <To>14</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>13</From>
        <To>14</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>14</From>
        <To>16</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>15</From>
        <To>14</To>
        <Label>Source4</Label>
      </Edge>
      <Edge>
        <From>17</From>
        <To>10</To>
        <Label>Source3</Label>
      </Edge>
      <Edge>
        <From>17</From>
        <To>0</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>18</From>
        <To>19</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>19</From>
        <To>20</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>20</From>
        <To>14</To>
        <Label>Source3</Label>
      </Edge>
      <Edge>
        <From>21</From>
        <To>17</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>21</From>
        <To>18</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>21</From>
        <To>15</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>22</From>
        <To>24</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>23</From>
        <To>25</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>24</From>
        <To>27</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>26</From>
        <To>23</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>27</From>
        <To>26</To>
        <Label>Source1</Label>
      </Edge>
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.Vision.ConvertColor, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.HsvThreshold, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.FindContours, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.BinaryRegionAnalysis, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.LargestBinaryRegion, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonTransform, Bonsai.Scripting, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Zip, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.CameraCapture, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Centroid, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Timestamp, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.IO.CsvWriter, Bonsai.System, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Crop, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Grayscale, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.Sum, Bonsai.Dsp, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.VideoWriter, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.Histogram2D, Bonsai.Dsp, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.ExpressionTransform, Bonsai.Scripting, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Threshold, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.DistinctUntilChanged, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>