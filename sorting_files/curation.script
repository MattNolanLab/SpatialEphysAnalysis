// Initialize
for (var i in clusters) {
	clusters[i].removeTag('rejected');
	clusters[i].removeTag('MUA');
	clusters[i].setMetric('isolation',1);
	clusters[i].setMetric('overlap_cluster',0);
}

console.log('\nnoise_overlap');
for (var i in clusters) {	
	if (clusters[i].metric('noise_overlap')>0.05) {
		console.log('REJECT: '+clusters[i].k());
		clusters[i].addTag('rejected');
	}
}

console.log('\npeak_noise');
for (var i in clusters) {	
	if (clusters[i].metric('peak_noise')>30) {
		console.log('REJECT: '+clusters[i].k());
		clusters[i].addTag('rejected');
	}
}

console.log('\nIsolation');
for (var i in clusterPairs) {
	var CP=clusterPairs[i];
	var overlap=CP.metric('overlap');
	if (1-overlap<CP.cluster1().metric('isolation')) {
		CP.cluster1().setMetric('isolation',1-overlap);
		CP.cluster1().setMetric('overlap_cluster',CP.cluster2().k());
	}
}

console.log('\nMUA');
for (var i in clusters) {	
	var iso=clusters[i].metric('isolation');
	if (iso<0.95) {
		console.log('MUA: '+clusters[i].k()+' <--> '+clusters[i].metric('overlap_cluster')+' ('+iso+')');
		clusters[i].addTag('MUA');
	}
}
